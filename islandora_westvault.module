<?php

/**
 * @file
 * Implements hooks and callbacks for this module.
 */
/**
 * Implements hook_permission().
 */
/* function islandora_westvault_permission() {
  $permissions = array(
    'ISLANDORA_WESTVAULT_SET_PRESERVATION' => array(
      'title' => t('Flag objects for preservation'),
      'description' => t('Select objects to be preserved.'),
      'restrict access' => TRUE,
    ),
    'ISLANDORA_WESTVAULT_ADMIN' => array(
      'title' => t('Administer Islandora Westvault'),
      'description' => t('Configure the Islandora Westvault module'),
      'restrict access' => TRUE,
    ),
  );
  return $permissions;
}
*/

/**
 * Implements hook_menu().
 */
function islandora_westvault_menu() {
  $items['islandora/object/%islandora_object/manage/preservation'] = array(
    'title' => 'Preservation',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('islandora_westvault_form', 2),
    'type' => MENU_LOCAL_TASK,
    'access arguments' => array(2),
/*      array(
        'ISLANDORA_WESTVAULT_SET_PRESERVATION',
      ), 2), */
    'file' => 'includes/management_form.inc',
  );
  $items['admin/islandora/tools/westvault'] = array(
    'title' => 'Islandora WestVault Preservation',
    'description' => 'Configure the Islandora WestVault module.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('islandora_westvault_admin'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'includes/admin.form.inc',
    'access arguments' => array(2),
/*      array(
        'ISLANDORA_WESTVAULT_ADMIN',
      ), 2), */
  );
  $items['admin/islandora/tools/westvault/objects'] = array(
    'title' => 'Preserved objects list',
    'description' => 'See all preserved objects',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('islandora_westvault_show'),
    'type' => MENU_LOCAL_TASK,
    'access arguments' => array(2),
/*      array(
        'ISLANDORA_WESTVAULT_ADMIN',
      ), 2), */
  );
  return $items;
}

/**
 * Implements hook_cron().
 *
 * Detect items whose embargo is either about to expire to notify or has expired
 * to lift.
 */
function islandora_westvault_cron() {
  // Goal: Detect objects with the preservation flag and preserve them. Skip objects already preserved.
  module_load_include('inc', 'islandora_westvault', 'includes/utilities');
  // Prepare list of PIDs with PRESERVATION datastream
  $timestamp = time();
  // Run the thing, then set the last-update variable.
  $object_list = islandora_westvault_get_preservation_targets();  

  // Eliminate already-preserved objects from list
  $filtered_list = array();
  foreach ($object_list AS $object) {
    $object_test = islandora_object_load($object);
  // basically we're looking to edit the XML of the existing datastream 
    $ds = $object_test["PRESERVATION"];
  // going to use $ds -> setContentFromString, but first need to read the existing data and compare timestamps  
  }
  $pid_location = variable_get('islandora_westvault_pid_file_location', '/tmp/');
  // Clear out the previous list of PIDs.
  // Use bag-it
  module_load_include('module', 'islandora_bagit');
  file_put_contents($pid_location . 'object_list.txt', '');
  foreach ($object_list AS $object) {
    $object_get = islandora_object_load($object);
    file_put_contents($pid_location . 'object_list.txt', $object . PHP_EOL, FILE_APPEND);
    islandora_bagit_create_bag($object_get);
  // Still todo: Update the PRESERVATION datastream to timestamp successful preservation

  }

//    variable_set('islandora_westvault_last_run', $timestamp);
}

/**
 * Set an item to be preserved.
 */
function islandora_westvault_set_preservation($object) {
  if (empty($object['PRESERVATION'])) {
    $ds = $object->constructDatastream('PRESERVATION', 'X');
    $object->ingestDatastream($ds);
  }
}
